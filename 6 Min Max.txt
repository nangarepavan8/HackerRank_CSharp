using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    public static void miniMaxSum(List<int> arr)
    {    
        long sumOfArray = 0L;
        long minimum  = long.MaxValue;
        long maximum  = 0L;
            
        for(int i=0; i < arr.Count; i++)
        {    
                sumOfArray +=arr[i];
                
                if(arr[i] < minimum)
                {
                   minimum = arr[i];
                }
                else if(arr[i] > maximum)
                 {
                   maximum = arr[i];
                 }              
        }  
        Console.WriteLine(string.Format("{0} {1}", sumOfArray - maximum, sumOfArray-minimum ));
        
    }
}

class Solution
{
    public static void Main(string[] args)
    {

        List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();

        Result.miniMaxSum(arr);
    }
}
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    public static void miniMaxSum(List<int> arr)
    {    
        long sumOfArray = 0L;
        long minimum  = long.MaxValue;
        long maximum  = 0L;
            
        for(int i=0; i < arr.Count; i++)
        {    
                sumOfArray +=arr[i];
                
                if(arr[i] < minimum)
                {
                   minimum = arr[i];
                }
                else if(arr[i] > maximum)
                 {
                   maximum = arr[i];
                 }              
        }  
        Console.WriteLine(string.Format("{0} {1}", sumOfArray - maximum, sumOfArray-minimum ));
        
    }
}

class Solution
{
    public static void Main(string[] args)
    {

        List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();

        Result.miniMaxSum(arr);
    }
}
